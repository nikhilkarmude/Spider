#
#Database setting
#
DBurl=jdbc:jtds:sqlserver://cimes3.its.fsu.edu/ExpertNet2_dev;instance=SQLEXPRESS
userName = expertnetWeb
password = Kaliban01.
fkids=6,7,9
#
#USF Setting
#
universityURLUSF=http://www.research.usf.edu/dpl/tech.asp
baseURLUSF=http://www.research.usf.edu/
#
#Database Queries
#
#**** Step 1 - Archive ****
#
BackupPropertyHoldingQuery = Insert into propertyHoldingBackup ([pkID],[description],[infoURL],[contactEmail],[fkUniversityID],[title],[Admin_Review_Terms],[TaggedIrisTerms],[keywords],[OriginalInventorUID],[universituid],[FirstName],[LastName],[InventorUID],[InventorExists],[isReadyForUpload],[tsCreated],[tsModified],[MarketingPDF],[JobID]) Select[pkID],[description],[infoURL],[contactEmail],[fkUniversityID],[title],[Admin_Review_Terms],[TaggedIrisTerms],[keywords],[OriginalInventorUID],[universituid],[FirstName],[LastName],[InventorUID],[InventorExists],[isReadyForUpload],[tsCreated],[tsModified],[MarketingPDF],'2' from propertyHolding where pkID in (Select H.pkID from propertyHolding H full join propertyHoldingBackup B on H.pkID = B.pkID where B.pkID is null)
BackupInventorHoldingQuery = Insert into inventorHolding_backup ([pkInventorID],[fkID],[fkUniversityID],[universityUID],[inventorUID],[FirstName],[LastName],[InventorExists],[OriginalInventorUID],[JobID]) Select[pkInventorID],[fkID],[fkUniversityID],[universityUID],[inventorUID],[FirstName],[LastName],[InventorExists],[OriginalInventorUID],'2' from inventorHolding where pkInventorID in (Select H.pkInventorID from inventorHolding H full join inventorHolding_backup B on H.pkInventorID = B.pkInventorID where B.pkInventorID is null)
DeletePropertyHolding = Delete from PropertyHolding where pkID in (select H.pkID from PropertyHolding H join PropertyHoldingBackup B on H.pkID = B.pkID where B.pkID is not null) 
DeleteInventorHolding = Delete from InventorHolding where pkInventorID in (select H.pkInventorID from InventorHolding H join inventorHolding_backup B on H.pkInventorID = B.pkInventorID where B.pkInventorID is not null)
#
#**** Step 5 - Ensure no 'null' ('') values in 
#
TaggedIrisTermsNull = Update PropertyHolding Set TaggedIrisTerms = '6781' Where TaggedIrisTerms = ''
#
#**** Step 6 - set existing property records to Inactive****
#
step6_setInactive_property = Update property set isActive = '0' where fkUniversityID in ('7','6','9')
#
#**** Step 7 - set existing property records to Inactive****
#
step7_setInactive_property = Update property Set property.infoURL = H.infoURL, property.contactEmail = coalesce(H.contactEmail, P.ContactEmail), property.description = coalesce(H.Description, P.Description), property.title = H.Title, property.keywords = coalesce(H.keywords, P.keywords), property.isActive = '1' From Property P inner join PropertyHolding H on P.universityuid = H.universituid and P.fkUniversityID = H.fkUniversityID
step7_setInactive_inventors = Insert into inventors([firstName],[lastName],[fkUniversityID],[Suffix]) Select a.FirstName, a.LastName, a.fkUniversityID, a.Suffix from (Select FirstName, LastName, fkUniversityID, Suffix, ROW_NUMBER() OVER(PARTITION BY FirstName, LastName, fkUniversityID order by LastName desc) rn from inventorHolding ) a full outer join inventors I on (LEFT(a.FirstName, CASE WHEN charindex(' ',a.FirstName) = 0 then LEN(a.firstname) else charindex(' ', a.FirstName) - 1 END)= LEFT(I.firstname, CASE WHEN charindex(' ',I.firstname) = 0 then LEN(I.firstname) else charindex(' ', I.firstname) - 1 END)) and (LEFT(a.LastName, CASE WHEN charindex(' ',a.LastName) = 0 then LEN(a.LastName) else charindex(' ', a.LastName) - 1 END)= LEFT(I.lastName, CASE WHEN charindex(' ',I.lastName) = 0 then LEN(I.lastName) else charindex(' ', I.lastName) - 1 END)) and (LEFT(a.firstname, CASE WHEN charindex(' ',a.firstname) = 0 then LEN(a.firstname) else charindex(' ', a.firstname) - 1 END)= LEFT(I.firstname, CASE WHEN charindex(' ',I.firstname) = 0 then LEN(I.firstname) else charindex(' ', I.firstname) - 1 END)) and a.fkUniversityID = I.fkUniversityID Where I.pkInventorID is null and a.rn = 1
step7_setInactive_InventorHolding = Update InventorHolding Set OriginalInventorUID = I.pkInventorID, InventorExists = '1' From inventorHolding H full outer join inventors I on (LEFT(H.firstname, CASE WHEN charindex(' ',H.firstname) = 0 then LEN(H.firstname) else charindex(' ', H.firstname) - 1 END)= LEFT(I.firstname, CASE WHEN charindex(' ',I.firstname) = 0 then LEN(I.firstname) else charindex(' ', I.firstname) - 1 END)) and (LEFT(H.LastName, CASE WHEN charindex(' ',H.LastName) = 0 then LEN(H.LastName) else charindex(' ', H.LastName) - 1 END)= LEFT(I.lastName, CASE WHEN charindex(' ',I.lastName) = 0 then LEN(I.lastName) else charindex(' ', I.lastName) - 1 END)) where H.fkUniversityID = I.fkUniversityID and H.pkInventorID in( Select H.pkInventorID From inventorHolding H full outer join inventors I on (LEFT(H.firstname, CASE WHEN charindex(' ',H.firstname) = 0 then LEN(H.firstname) else charindex(' ', H.firstname) - 1 END)= LEFT(I.firstname, CASE WHEN charindex(' ',I.firstname) = 0 then LEN(I.firstname) else charindex(' ', I.firstname) - 1 END)) and (LEFT(H.LastName, CASE WHEN charindex(' ',H.LastName) = 0 then LEN(H.LastName) else charindex(' ', H.LastName) - 1 END)= LEFT(I.lastName, CASE WHEN charindex(' ',I.lastName) = 0 then LEN(I.lastName) else charindex(' ', I.lastName) - 1 END)) where H.pkInventorID is not null group by H.pkInventorID having COUNT(H.pkInventorID)<2)
#
#**** Step 8 - Insert Property Records (new technologies)****
#
step8_Insert_Property_Records_property  = Insert into property ([description],[contactEmail],[infoURL],[isActive],[keywords],[title],[universityUID],[fkUniversityID]) Select[description],[contactEmail],[infoURL],'1',[keywords],[title],[universituid],[fkUniversityID] from propertyHolding where pkID in (Select pkID from propertyHolding H left join property P on H.universituid = P.universityUID and H.fkUniversityID = P.fkUniversityID where P.pkPropertyID is null)
step8_Insert_Property_Records_property_inventors = Insert into property_inventors ([fkInventorID],[fkPropertyID]) Select DISTINCT H.OriginalInventorUID, P.pkPropertyID from property P join inventorHolding H on P.fkUniversityID = H.fkUniversityID and P.universityUID = H.universityUID where NOT EXISTS(select J.fkInventorID, J.fkPropertyID from property_inventors J where P.pkPropertyID = J.fkPropertyID and H.OriginalInventorUID = J.fkInventorID) and H.OriginalInventorUID is not null and P.pkPropertyID is not null and H.OriginalInventorUID > 0 order by H.OriginalInventorUID, P.pkPropertyID
#
#**** Step 9 - Delete existing research terms****
#
step9_Delete_existing_research_terms = Delete from PropertyResearchIris Where fkPropertyID in ( Select fkPropertyID from propertyResearchIris I join property P on i.fkPropertyID = P.pkPropertyID join propertyHolding H on (P.fkUniversityID = H.fkUniversityID and P.universityUID = H.universituid) where P.fkUniversityID in (7,6,9) )

